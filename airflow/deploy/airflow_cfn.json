{
    "Description": "Airflow - Test Environment",
    "Parameters": {
        "KeyName": {"Type": "String"},
        "ImageId": {"Type": "String"},
        "InstanceType": {"Type": "String"},
        "SSHLocation": {"Type": "String"},
        "AirflowCapacity": {"Type": "String"}
    },
    "Resources": {
        "AirflowAutoscalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": { "Fn::GetAZs": "us-east-1"},
                "LaunchConfigurationName": { "Ref": "AirflowLaunchConfig" },
                "MinSize": "1",
                "MaxSize": {"Ref": "AirflowCapacity"},
                "LoadBalancerNames": [{ "Ref": "AirflowLoadBalancer"}]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT10M",
                    "Count": {"Ref": "AirflowCapacity"}
                }
            },
            "UpdatePolicy": {
                "AutoScalingRollingUpdate": {
                    "MinInstancesInService": "1",
                    "MaxBatchSize": "1",
                    "PauseTime": "PT10M",
                    "WaitOnResourceSignals": "true"
                }
            }
        },
        "AirflowLaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "Comment": "Additional Configuration Steps to be run on boot",
                "AWS::CloudFormation::Init": {
                    "config": {
                        "packages": {},
                        "files": {
                            "/etc/systemd/system/redis.service": {
                                "owner": "root",
                                "group": "root",
                                "content": { "Fn::Join": ["\n", [
                                    "[Unit]",
                                    "Description=Redis In-Memory Data Store",
                                    "After=network.target",
                                    "",
                                    "[Service]",
                                    "User=redis",
                                    "Group=redis",
                                    "ExecStart=/usr/local/bin/redis-server /etc/redis/redis.conf",
                                    "ExecStop=/usr/local/bin/redis-cli shutdown",
                                    "Restart=always",
                                    "",
                                    "[Install]",
                                    "WantedBy=multi-user.target"
                                ]]}
                            },
                            "/etc/systemd/system/airflow.service": {
                                "owner": "root",
                                "group": "root",
                                "content": { "Fn::Join": ["\n", [
                                    "[Unit]",
                                    "Description=Airflow Service",
                                    "After=network.target mysql.service redis.service",
                                    "Wants=mysql.service redis.service",
                                    "[Service]",
                                    "User=airflow",
                                    "Group=airflow",
                                    "Type=simple",
                                    "ExecStart=/bin/bash -c 'export AIRFLOW_HOME=/root/airflow ; airflow webserver --pid /run/airflow/webserver.pid'",
                                    "ExecReload=/bin/kill -s HUP $MAINPID",
                                    "ExecStop=/bin/kill -s TERM $MAINPID",
                                    "Restart=on-failure",
                                    "RestartSec=42s",
                                    "PrivateTmp=true",
                                    "",
                                    "[Install]",
                                    "WantedBy=multi-user.target"
                                ]]}
                            },
                            "/root/airflow/airflow.cfg": {
                                "owner": "root",
                                "group": "root",
                                "content": { "Fn::Join" : ["\n", [
                                    "[core]",
									"airflow_home = /root/airflow",
                                    "dags_folder = /root/airflow/dags",
                                    "base_log_folder = /root/airflow/logs",
                                    "remote_base_log_folder =",
                                    "remote_log_conn_id =",
                                    "encrypt_s3_logs = False",
                                    "s3_log_folder = ",
                                    "executor = SequentialExecutor",
                                    "sql_alchemy_conn = mysql+mysqldb://airflow:airflow@127.0.0.1:3306/airflow",
                                    "sql_alchemy_pool_size = 5",
                                    "sql_alchemy_pool_recycle = 3600",
                                    "parallelism = 32",
                                    "dag_concurrency = 16",
                                    "dags_are_paused_at_creation = True",
                                    "non_pooled_task_slot_count = 128",
                                    "max_active_runs_per_dag = 16",
                                    "load_examples = True",
                                    "plugins_folder = /root/airflow/plugins",
                                    "fernet_key = -k_t5S1Hh2Bu4gH_B09iACGc9TV-wCRXd5Z5ZHcAoHk=",
                                    "donot_pickle = False",
                                    "dagbag_import_timeout = 30",
                                    "task_runner = BashTaskRunner",
                                    "default_impersonation =",
                                    "security =",
                                    "unit_test_mode = False",
                                    "[cli]",
                                    "api_client = airflow.api.client.local_client",
                                    "endpoint_url = http://localhost:8080",
                                    "[api]",
                                    "auth_backend = airflow.api.auth.backend.default",
                                    "default_owner = Airflow",
                                    "default_cpus = 1",
                                    "default_ram = 512",
                                    "default_disk = 512",
                                    "default_gpus = 0",
                                    "[webserver]",
                                    "base_url = http://localhost:8080",
                                    "web_server_host = 0.0.0.0",
                                    "web_server_port = 8080",
                                    "web_server_ssl_cert =",
                                    "web_server_ssl_key =",
                                    "web_server_worker_timeout = 120",
                                    "worker_refresh_batch_size = 1",
                                    "worker_refresh_interval = 30",
                                    "secret_key = temporary_key",
                                    "workers = 4",
                                    "worker_class = sync",
                                    "access_logfile = -",
                                    "error_logfile = -",
                                    "expose_config = False",
                                    "authenticate = False",
                                    "filter_by_owner = False",
                                    "owner_mode = user",
                                    "dag_orientation = LR",
                                    "demo_mode = False",
                                    "log_fetch_timeout_sec = 5",
                                    "hide_paused_dags_by_default = False",
                                    "[email]",
                                    "[smtp]",
                                    "smtp_host = localhost",
                                    "smtp_starttls = True",
                                    "smtp_ssl = False",
                                    "smtp_port = 25",
                                    "smtp_mail_from = airflow@airflow.com",
                                    "[celery]",
                                    "celery_app_name = airflow.executors.celery_executor",
                                    "celeryd_concurrency = 16",
                                    "worker_log_server_port = 8793",
                                    "broker_url = redis://localhost:6379/0",
                                    "celery_result_backend = db+mysql//airflow:airflow@127.0.0.1:3306/airflow",
                                    "flower_host = 0.0.0.0",
                                    "flower_port = 5555",
                                    "default_queue = default",
                                    "[scheduler]",
                                    "job_heartbeat_sec = 5",
                                    "scheduler_heartbeat_sec = 5",
                                    "run_duration = -1",
                                    "min_file_process_interval = 0",
                                    "dag_dir_list_interval = 300",
                                    "print_stats_interval = 30",
                                    "child_process_log_directory = /root/airflow/logs/scheduler",
                                    "scheduler_zombie_task_threshold = 300",
                                    "catchup_by_default = True",
                                    "statsd_on = False",
                                    "statsd_host = localhost",
                                    "statsd_port = 8125",
                                    "statsd_prefix = airflow",
                                    "max_threads = 2",
                                    "authenticate = False",
                                    "[mesos]",
                                    "master = localhost:5050",
                                    "framework_name = Airflow",
                                    "task_cpu = 1",
                                    "task_memory = 256",
                                    "checkpoint = False",
                                    "authenticate = False",
                                    "[kerberos]",
                                    "ccache = /tmp/airflow_krb5_ccache",
                                    "principal = airflow",
                                    "reinit_frequency = 3600",
                                    "kinit_path = kinit",
                                    "keytab = airflow.keytab",
                                    "[github_enterprise]",
                                    "api_rev = v3",
                                    "[admin]",
                                    "hide_sensitive_variable_fields = True"
								]]}
                            }
                        },

                        "services": {}
                    }
                }
            },
            "Properties": {
                "KeyName": {"Ref": "KeyName"},
                "ImageId": {"Ref": "ImageId"},
                "SecurityGroups": [ 
                    {"Ref": "AirflowSecurityGroup"}
                ],
                "InstanceType": {"Ref": "InstanceType"},
                "UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
                    "#!/bin/bash -xe\n",
                    "sudo adduser --system --group --no-create-home redis\n",
                    "sudo adduser --system --group --no-create-home airflow\n",
                    "sudo mkdir -p /var/lib/redis\n",
                    "wget https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                    "tar xzf aws-cfn-bootstrap-latest.tar.gz && mv aws-cfn-bootstrap-1.4 aws-cfn-bootstrap-latest\n",
                    "easy_install aws-cfn-bootstrap-latest\n",
                    "/usr/local/bin/cfn-init --stack ", {"Ref": "AWS::StackName"}, " --resource AirflowLaunchConfig", " --region ", {"Ref": "AWS::Region"}, "\n",
                    "sudo systemctl restart mysql.service\n",
                    "sudo systemctl start redis.service\n",
                    "sudo systemctl start airflow.service\n",
                    "/usr/local/bin/cfn-signal --exit-code $? --stack ", {"Ref": "AWS::StackName"},
                    "  --resource AirflowAutoscalingGroup ",
                    " --region ", {"Ref": "AWS::Region"}, "\n"
                ]]}}
            }
        },
        "AirflowLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "AvailabilityZones": {"Fn::GetAZs": "us-east-1"},
                "CrossZone": "true",
                "Listeners": [{
                    "LoadBalancerPort": "80",
                    "InstancePort": "8080",
                    "Protocol": "HTTP"
                }],
                "HealthCheck": {
                    "Target": "HTTP:80/",
                    "HealthyThreshold": "3",
                    "UnhealthyThreshold": "5",
                    "Interval": "30",
                    "Timeout": "5"
                }
            }
        },
        "AirflowSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Provides access to critical service & mgmt ports",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": { "Ref" : "SSHLocation"}
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "SourceSecurityGroupOwnerId" : {"Fn::GetAtt" : ["AirflowLoadBalancer", "SourceSecurityGroup.OwnerAlias"]},
                        "SourceSecurityGroupName" : {"Fn::GetAtt" : ["AirflowLoadBalancer", "SourceSecurityGroup.GroupName"]}
                    }
                ]
            }
        }
    },
    "Outputs": {
        "URL": {
            "Description": "URL for Website",
            "Value": {"Fn::Join": ["", [ "http://", {"Fn::GetAtt": ["AirflowLoadBalancer","DNSName"]}  ] ]}
        }
    }
}
